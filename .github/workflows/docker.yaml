name: Build and Push Docker Image to ECR & Apply changes to EKS

on:
  push:
    branches:
      - master 

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set aws_session_token ${{ secrets.AWS_SESSION_TOKEN }}
        aws configure set region us-east-1
        aws configure set output json

    - name: Login to ECR (Manual Method)
      run: |
        aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 988732826295.dkr.ecr.us-east-1.amazonaws.com

    - name: Build and tag Docker image
      run: |
        docker build -t cloudsync-webapp -f CloudWebApplication/Dockerfile .
        docker tag cloudsync-webapp:latest 988732826295.dkr.ecr.us-east-1.amazonaws.com/cloudsync/webapp:latest

    - name: Push to ECR
      run: docker push 988732826295.dkr.ecr.us-east-1.amazonaws.com/cloudsync/webapp:latest

    - name: Set up kubectl
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: us-east-1
        aws-output: json

    - name: Configure kubectl to use EKS
      run: |
        aws eks update-kubeconfig --name CloudSync-Cluster --region us-east-1

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8/deployment.yaml
        kubectl apply -f k8/service.yaml